{"version":3,"sources":["store/atoms.js","store/selectors.js","store/hooks.js","components/Catalog.js","components/CartButtons.js","components/Cart.js","components/Header.js","components/App.js","index.js"],"names":["cart","atom","key","default","cartState","selector","get","totalCost","reduce","a","b","price","qty","totalQty","cloneIndex","items","id","clone","map","item","index","findIndex","useAddItem","useRecoilState","setItems","product","useRemoveItem","filter","products","Catalog","addItem","className","p","onClick","CartButtons","add","remove","decrease","removeItem","useDecreaseItem","Cart","cartItems","useRecoilValue","colSpan","style","textAlign","Header","to","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf52a269.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const cart = atom({\n  key: \"cart\",\n  default: [],\n});\n","import { selector } from 'recoil';\nimport { cart } from './atoms';\n\nexport const cartState = selector({\n\tkey: 'cartState',\n\tget: ({get}) => {\n\t\tconst totalCost = get(cart).reduce((a, b) => a + b.price * b.qty, 0);\n\t\tconst totalQty = get(cart).reduce((a, b) => a + b.qty, 0);\n\t\treturn {\n\t\t\ttotalCost,\n\t\t\ttotalQty\n\t\t}\n\t}\n})","import { useRecoilState } from \"recoil\";\nimport { cart } from \"./atoms\";\n\nconst cloneIndex = (items, id) => ({\n  clone: items.map((item) => ({ ...item })),\n  index: items.findIndex((item) => item.id === id),\n});\n\nexport const useAddItem = () => {\n  const [items, setItems] = useRecoilState(cart);\n  return (product) => {\n    const { clone, index } = cloneIndex(items, product.id);\n    if (index !== -1) {\n      clone[index].qty += 1;\n      setItems(clone);\n    } else {\n      setItems([...clone, { ...product, qty: 1 }]);\n    }\n  };\n};\n\nexport const useRemoveItem = () => {\n\tconst [items, setItems] = useRecoilState(cart);\n\treturn (product) => {\n\t  setItems(items.filter((item) => item.id !== product.id));\n\t};\n  };\n  \n  export const useDecreaseItem = () => {\n\tconst [items, setItems] = useRecoilState(cart);\n\tconst removeItem = useRemoveItem();\n\treturn (product) => {\n\t  const { clone, index } = cloneIndex(items, product.id);\n\t  if (clone[index].qty === 1) {\n\t\tremoveItem(product);\n\t  } else {\n\t\tclone[index].qty -= 1;\n\t\tsetItems(clone);\n\t  }\n\t};\n  };\n","import React from \"react\";\nimport { useAddItem } from '../store';\nconst ids = [\n  \"apple\",\n  \"orange\",\n  \"pear\",\n  \"tomato\",\n  \"watermelon\",\n  \"guava\",\n  \"mango\",\n  \"avacado\",\n  \"lime\",\n  \"lemon\",\n  \"kiwi\",\n];\n\nconst products = ids.map((id, index) => ({ id, price: index + 1 }));\n\nconst Catalog = () => {\n  const addItem = useAddItem();\n  return (\n    <div className=\"catalog\">\n      <div className=\"products\">\n        {products.map((p) => (\n          <div key={p.id} className=\"product\">\n            <h4>\n              {p.id} / ${p.price}\n            </h4>\n            <button\n              className=\"ui button positive mini\"\n              onClick={() => addItem(p)}\n            >\n              Add\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Catalog;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useAddItem, useDecreaseItem, useRemoveItem } from \"../store\";\n\nconst CartButtons = ({ item }) => {\n  const add = useAddItem();\n  const remove = useRemoveItem();\n  const decrease = useDecreaseItem();\n  return (\n    <div className=\"ui buttons mini\">\n      <button onClick={() => decrease(item)} className=\"ui button\">\n        -\n      </button>\n      <button onClick={() => add(item)} className=\"ui button positive\">\n        +\n      </button>\n      <button onClick={() => remove(item)} className=\"ui button negative\">\n        x\n      </button>\n    </div>\n  );\n};\n\nCartButtons.propTypes = {\n  item: PropTypes.object,\n};\n\nexport default CartButtons;\n","import React from \"react\";\nimport CartButtons from \"./CartButtons\";\nimport { useRecoilValue } from \"recoil\";\nimport { cart, cartState } from \"../store\";\n\nconst Cart = () => {\n  const cartItems = useRecoilValue(cart);\n  const { totalCost } = useRecoilValue(cartState);\n  return (\n    <table className=\"cart\">\n      <thead>\n        <tr>\n          <th></th>\n          <th>Item</th>\n          <th>Price</th>\n          <th>Qty</th>\n          <th>Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        {cartItems.map((item) => (\n          <tr key={item.id}>\n            <td className=\"actions\">\n              <CartButtons item={item} />\n            </td>\n            <td>{item.id}</td>\n            <td>{item.price}</td>\n            <td>{item.qty}</td>\n            <td>${item.qty * item.price}</td>\n          </tr>\n        ))}\n        <tr>\n          <td colSpan=\"4\" style={{ textAlign: \"right\" }}>\n            Total:\n          </td>\n          <td>${totalCost}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useRecoilValue } from 'recoil';\nimport { cartState } from '../store';\n\nconst Header = () => {\n  const { totalQty } = useRecoilValue(cartState);\n  return (\n    <div className=\"header\">\n      <div>\n        <Link to=\"/\">\n          <h1>My Store</h1>\n        </Link>\n      </div>\n      <div>\n        <Link className=\"ui button primary\" to=\"cart\">\n          Cart: {totalQty}\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Catalog from \"./Catalog\";\nimport Cart from \"./Cart\";\nimport Header from \"./Header\";\nimport { RecoilRoot } from \"recoil\";\n\nconst App = () => {\n  return (\n    <RecoilRoot>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Catalog} />\n          <Route path=\"/cart\" component={Cart} />\n        </Switch>\n      </Router>\n    </RecoilRoot>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}